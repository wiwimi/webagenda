/* Generated by Together */

package Persistence;

/**
 * Broker interface, determining global functions that all broker classes should contain.  Provides functionality for retrieving, creating, updating and deleting data from the database. 
 */
public interface Broker {
    /**
     * Retrieves the type of object from the database. The search criteria is given as a new object of that type, with all attributes empty except for those that will be used to match results.  This allows for single objects to be retrieved, or any combination of search terms to be used through the same command. 
     */
    Object[] get(Object parameter0);

    /**
     * Applies any changes in the object to the database, or saves it as a new record if it does not yet exist. 
     */
    boolean update(Object parameter0);

    /**
     * Deletes the record for the given object from the database. 
     */
    boolean delete(Object parameter0);

    /**
     * Opens the broker and prepares it's connection to the database.  Once complete, the broker can be used to interact with the database. 
     */
    boolean openBroker();

    /**
     * Closes the broker and it's accompanying connection to the database, ensuring all pending transactions are completed first. 
     */
    boolean closeBroker();
}
