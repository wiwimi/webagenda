/* Generated by Together */

package Business;

/**
 * Contains information on an employee within the system including username and passwords to log in, and basic employee information such as first and last name. 
 */
public class Employee {
    public WorkingShift[] getWorkingTimes(){}

    public void getLoginTime(){}

    public void getViewTimes(){}

    /**
     * The ID number of the employee within the system. 
     */
    private int empID;
    private int supervisorID;

    /**
     * The first name of the employee. 
     */
    private String givenName;

    /**
     * The last name of the employee. 
     */
    private String familyName;
    private Date birthDate;

    /**
     * The username that the employee uses to log into the system. 
     */
    private String username;

    /**
     * The password that the employee uses to log into the system. 
     */
    private String password;
    private Position prefPosition;
    private Location prefLocation;

    /**
     * The current permission level of the employee, tied to a permission set. 
     */
    private PermissionSet plevel;

    /**
     * The active state of the employee.  When active, an employee can be included in shifts and schedules.
     * 
     * An inactive employee is equivalent to one that has been deleted, and is kept in the system so they may still be included in reports and auditing procedures. 
     */
    private boolean active;

    /**
     * Employees will receive and view notifications that are sent automatically, or manually sent by their supervisor. 
     * @clientCardinality 1
     * @supplierCardinality 0..*
     * @clientQualifier receives
     * @supplierQualifier is sent to
     */
    private Notification lnkNotification;

    /**
     * All employees have an assigned permission set that determines employee-specific permissions within the system regarding what they can and can't access, as well as numerical values relating to time off.
     * @clientCardinality 0..*
     * @supplierCardinality 1
     * @supplierQualifier applies to
     * @clientQualifier has
     */
    private PermissionSet lnkPermissionLevel;

    /**
     * @clientCardinality 0..*
     * @supplierCardinality 1
     * @clientQualifier prefers
     * @supplierQualifier is preferred by 
     */
    private Location lnkLocation;

    /**
     * @supplierCardinality 1..*
     * @clientQualifier has
     * @supplierQualifier applies to
     * @clientCardinality 0..* 
     */
    private Skill lnkSkill;

    /**
     * @clientQualifier prefers
     * @supplierCardinality 1
     * @supplierQualifier preferred by
     * @clientCardinality 0..* 
     */
    private Position lnkPosition;
}
