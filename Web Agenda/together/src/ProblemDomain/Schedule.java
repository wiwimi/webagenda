/* Generated by Together */

package ProblemDomain;

/**
 * A collection of shifts of multiple employees, grouped together by the workgroup or supervisor that those employees share. 
 */
public class Schedule {
    /**
     * The createNewSchedule() method is used to create a blank schedule and by default will include any time booked off by any of the employees he is scheduling. This can be turned off if the supervisor does not want to include the dates that the employees are on vacation/sick/absent. 
     */
    public Schedule newSched() {
    }

    /**
     * Removes a shift from a schedule. 
     */
    public void removeShift() {
    }

    /**
     * This method is used to actually assign a shift to a schedule for a specific employee. This method can be used for as many shifts as the supervisor wants to have to as many employees as he/she wants. Error checking will take place every time a supervisor tries to create a schedule that goes outside normal bounds of employment. 
     */
    public void addShift() {
    }

    /**
     * Gets a collection including all shifts that the schedule contains. 
     */
    public Shift[] getAllShifts(){}

    /**
     * Holds references to all shifts that are active for this schedule. 
     */
    private Shift[] shifts;

    /**
     * The date and time at which the schedule is set to become active, and all affected employees will be expected to follow the shifts it contains. 
     */
    private Date activeDate;

    /**
     * The duration in days that the schedule will be active for. 
     */
    private int duration;

    /**
     * The supervisor who created the schedule. 
     */
    private Supervisor creator;

    /**
     * A description of the schedule, if one is desired.  This is not required to create a schedule. 
     */
    private String description;

    /**
     * A schedule is composed of one or more shifts.
     * @link aggregation 
     * @clientCardinality 0..*
     * @supplierCardinality 1..*
     * @supplierQualifier contains
     * @clientQualifier belongs to*/
    private Shift lnkShift;
}
